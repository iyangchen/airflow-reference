version: "3.8"
services:
  metadata-database:
    image: postgres:latest
    restart: always
    container_name: airflow-metadata-db
    ports:
      - "35432:5432"
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "airflow", "-U", "airflow"]
      timeout: 45s
      interval: 10s
      retries: 3

  webserver:
    build: ./webserver
    image: airflow-webserver
    restart: always
    container_name: airflow-webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./webserver/init.sh:/opt/airflow/init.sh
      - ./webserver/logs:/opt/airflow/logs
      - ./airflow.cfg:/opt/airflow/airflow.cfg
      - ./unittests.cfg:/opt/airflow/unittests.cfg
      - ./webserver_config.py:/opt/airflow/webserver_config.py
    ports:
      - "8080:8080"
    depends_on:
      - metadata-database
    entrypoint: /opt/airflow/init.sh
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgres+psycopg2://airflow:airflow@airflow-metadata-db:5432/airflow

  scheduler:
    build: ./scheduler
    image: airflow-scheduler
    restart: always
    container_name: airflow-scheduler
    command: scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scheduler/logs:/opt/airflow/logs
      - ./airflow.cfg:/opt/airflow/airflow.cfg
      - ./unittests.cfg:/opt/airflow/unittests.cfg
      - ./webserver_config.py:/opt/airflow/webserver_config.py
    depends_on:
      - metadata-database
      - webserver
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgres+psycopg2://airflow:airflow@airflow-metadata-db:5432/airflow